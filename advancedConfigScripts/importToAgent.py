#===============================================================================
# Title:       importToAgent.py - ICS Connectivity Agent keystore importer
#
# Disclaimer:  This script is provided "AS IS" and without any official support
#              from Oracle. Its use needs to be performed using details from the
#              comments section and/or readme file (if one is included). Any bugs
#              encountered, feedback, and/or enhancement requests are welcome.
#
#              No liability for the contents of this script can be accepted. Use
#              the concepts, examples, and information at your own risk. However,
#              great care has been taken to ensure that all technical information
#              is accurate and as useful as possible.
#
#              Copyright Â© 2018, Oracle and/or its affiliates. All rights reserved.
#              The Universal Permissive License (UPL), Version 1.0
#
#
# Description: This script is used to import an existing keystore file (.jks)
#              into the keystore of a running instance of the ICS Connectivity
#              Agent.  It relies on the importToAgent.ini file (generated by
#              createKeystore.sh) that contains all the keystore details for a
#              successful import.  The following is an example of this .ini:
#
#              [ImportKeyStore]
#              appStripe: system
#              keystoreName: trust
#              keyAliases: root-VeriSignClass3-G5,intermediate-Symantec-G4,main-us
#              keyPasswords: changeit,changeit,changeit
#              keystorePassword: changeit
#              keystorePermission: true
#              keystoreType: JKS
#              keystoreFile: ./certificates/agentcerts.jks
#
#              If no command-line arguments are provided, the following defaults
#              will be used:
#                * Agent Server User:          weblogic
#                * Agent Server User Password: welcome1
#                * Agent Server Host Name:     localhost
#                * Agent Server Host Port:     7001
#
# Author:      Greg Mally
#
# Date:        31-October-2016
#
# Version:     1.0    
#
# Usage:       ./wlst.sh -u weblogic -p welcome1 --host localhost --port 7001
#
# Notes:       Although this script can be kicked off using wlst.sh directly,
#              it is recommended to use the importToAgent.sh.
#
#              After running this script it is recommended to bounce the
#              Connectivity Agent server to make sure everything loads as
#              expected.
#
#===============================================================================

import sys
import getopt
import ConfigParser
import java.lang.String as jstring
import java.lang.System as jsystem


# Usage function
def usage():
  print ''
  print 'NOTE: It is recommended to run this script using the importToAgent.sh'
  print 'Usage:       ./wlst.sh [-u AgentUserName] [-p AgentPassword] [-h,--host HostName] [-t,--port HostPort] [--help]'
  print 'Defaults:    ./wlst.sh -u weblogic -p welcome1 --host localhost --port 7001'
  print 'For Example, ./wlst.sh -u agentAdmin -p admin!'
  print ''


# Parse Config
config = ConfigParser.ConfigParser()
config.read('importToAgent.ini')


# Setup for processing command-line options
try:
  opts, args = getopt.getopt(sys.argv[1:], "u:p:h:t:",["host=", "port=", "help="])
except getopt.GetoptError, err:
  print str(err)
  usage()
  sys.exit(2)

  
# Default values
user="weblogic"
password="welcome1"
host="localhost"
port="7001"


# Assign parameters to variables
for opt, arg in opts:
  if opt == "-u":
    user = arg
  elif opt == "-p":
    password = arg
  elif opt in ("-h", "--host"):
    host = arg
  elif opt in ("-t", "--port"):
    port = arg
  elif opt == "--help":
    usage()
    sys.exit()
  else:
    print "Unknown options: ", opt
    print "Exiting WLST process ..."
    sys.exit()

# Setup connection string
connectStr = "t3://" + str(host) + ":" + str(port)

# Setup variables
APPSTRIPE           = config.get('ImportKeyStore', 'appStripe')
KEYSTORENAME        = config.get('ImportKeyStore', 'keystoreName')
KEYALIASES          = config.get('ImportKeyStore', 'keyAliases')
KEYPASSWORDS        = config.get('ImportKeyStore', 'keyPasswords')
KEYSTOREPASSWORD    = config.get('ImportKeyStore', 'keystorePassword')
KEYSTOREPERMISSION  = config.getboolean('ImportKeyStore', 'keystorePermission')
KEYSTORETYPE        = config.get('ImportKeyStore', 'keystoreType')
KEYSTOREFILE        = config.get('ImportKeyStore', 'keystoreFile')


print 'Using the following for the importKeyStore:'
print 'WebLogic URI        = ', connectStr
print 'WebLogic User       = ', user
print 'WebLogic Password   = ', password
print 'appStripe           = ', APPSTRIPE
print 'keystoreName        = ', KEYSTORENAME
print 'keyAliases          = ', KEYALIASES
print 'keyPasswords        = ', KEYPASSWORDS
print 'keystorePassword    = ', KEYSTOREPASSWORD
print 'keystorePermission  = ', config.get('ImportKeyStore', 'keystorePermission')
print 'keystoreType        = ', KEYSTORETYPE
print 'keystoreFile        = ', KEYSTOREFILE
print ''

try:
    connect(user,password,connectStr)

    serverRuntime()

    svc = getOpssService(name='KeyStoreService')

    svc.importKeyStore(appStripe=APPSTRIPE, name=KEYSTORENAME, aliases=KEYALIASES, keypasswords=KEYPASSWORDS, password=KEYSTOREPASSWORD, permission=KEYSTOREPERMISSION, type=KEYSTORETYPE, filepath=KEYSTOREFILE)

except Exception, ex:
    print 'Error importing keystore keys: '
    print str(ex)
